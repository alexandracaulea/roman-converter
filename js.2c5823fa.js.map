{"version":3,"sources":["../src/js/elements.js","../src/js/numbers.js","../src/js/utils.js","../src/js/handlers.js","../src/js/app.js","../src/js/index.js"],"names":["converterInput","document","querySelector","closeButton","resultConversion","equalSign","currentDateNumeral","currentDateRoman","ROMAN_NUMBERS","DECIMAL_NUMBERS","convertDateToRoman","currentDate","delimiter","arguments","length","Array","isArray","stringDate","i","j","concat","result","substring","convertToString","date","String","padBeginning","padStart","convertToRoman","input","showInformation","attribute","value","setAttribute","displayCurrentDate","Date","currentDay","getDate","currentMonth","getMonth","currentYear","getFullYear","dateToDisplay","textContent","handleCloseButton","handleUserTyping","e","valueTyped","target","test","search","replace","innerHTML","init","window","addEventListener"],"mappings":"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","file":"js.2c5823fa.js","sourceRoot":"..\\public","sourcesContent":["export const converterInput = document.querySelector(\".converter__input\");\r\nexport const closeButton = document.querySelector(\".close-btn\");\r\nexport const resultConversion = document.querySelector(\".converter__result\");\r\nexport const equalSign = document.querySelector(\".equal-sign\");\r\nexport const currentDateNumeral = document.querySelector(\".date__numeral-current\");\r\nexport const currentDateRoman = document.querySelector(\".date__roman\");\r\n","export const ROMAN_NUMBERS = [\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"];\r\nexport const DECIMAL_NUMBERS = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\r\n","import { ROMAN_NUMBERS, DECIMAL_NUMBERS } from \"./numbers\";\r\nimport {\r\n  currentDateNumeral,\r\n  currentDateRoman,\r\n  converterInput,\r\n  resultConversion,\r\n  equalSign,\r\n  closeButton,\r\n} from \"./elements\";\r\n\r\nexport function convertDateToRoman(currentDate, delimiter) {\r\n  if (arguments.length !== 2) return;\r\n  if (!Array.isArray(currentDate)) return;\r\n\r\n  let stringDate = \"\";\r\n  for (let i = 0; i < currentDate.length; i++) {\r\n    for (let j = 0; j < DECIMAL_NUMBERS.length; j++) {\r\n      while (DECIMAL_NUMBERS[j] <= currentDate[i]) {\r\n        stringDate += ROMAN_NUMBERS[j];\r\n        currentDate[i] -= DECIMAL_NUMBERS[j];\r\n      }\r\n    }\r\n    stringDate = stringDate.concat(delimiter);\r\n  }\r\n  const result = stringDate.substring(0, stringDate.length - 1);\r\n  return result;\r\n}\r\n\r\nexport function convertToString(date) {\r\n  if (arguments.length !== 1) return;\r\n  return String(date);\r\n}\r\n\r\nexport function padBeginning(date) {\r\n  if (arguments.length !== 1) return;\r\n\r\n  const stringDate = convertToString(date);\r\n  if (stringDate < 10) {\r\n    return stringDate.padStart(2, 0);\r\n  }\r\n  return stringDate;\r\n}\r\n\r\nexport function convertToRoman(input) {\r\n  if (arguments.length !== 1) return;\r\n\r\n  let stringDate = \"\";\r\n  for (let i = 0; i < DECIMAL_NUMBERS.length; i++) {\r\n    while (DECIMAL_NUMBERS[i] <= input) {\r\n      stringDate += ROMAN_NUMBERS[i];\r\n      input -= DECIMAL_NUMBERS[i];\r\n    }\r\n  }\r\n  return stringDate;\r\n}\r\n\r\nexport function showInformation(attribute, value) {\r\n  resultConversion.setAttribute(attribute, value);\r\n  closeButton.setAttribute(attribute, value);\r\n  equalSign.setAttribute(attribute, value);\r\n}\r\n\r\nexport const displayCurrentDate = () => {\r\n  const currentDate = new Date();\r\n  const currentDay = padBeginning(currentDate.getDate());\r\n  const currentMonth = padBeginning(currentDate.getMonth() + 1);\r\n  const currentYear = convertToString(currentDate.getFullYear());\r\n  const dateToDisplay = `${currentDay}.${currentMonth}.${currentYear}`;\r\n  currentDateNumeral.textContent = dateToDisplay;\r\n  currentDateNumeral.setAttribute(\"datetime\", `${currentYear}-${currentMonth}-${currentDay}`);\r\n  currentDateRoman.textContent = convertDateToRoman([currentDay, currentMonth, currentYear], \".\");\r\n  converterInput.value = currentDate.getDate();\r\n  resultConversion.textContent = convertToRoman(currentDay);\r\n};\r\n","import { converterInput, resultConversion } from \"./elements\";\r\nimport { convertToRoman, showInformation } from \"./utils\";\r\n\r\nexport const handleCloseButton = () => {\r\n  converterInput.value = \"\";\r\n  resultConversion.textContent = \"\";\r\n  showInformation(\"hidden\", true);\r\n};\r\n\r\nexport const handleUserTyping = (e) => {\r\n  let valueTyped = e.target.value;\r\n\r\n  if (valueTyped === \"\") {\r\n    showInformation(\"hidden\", true);\r\n    return;\r\n  } else if (/[^0-9]/g.test(valueTyped) || valueTyped.search(/^0/) != -1) {\r\n    valueTyped = valueTyped.replace(/^0|[^0-9]/g, \"\");\r\n    converterInput.value = valueTyped;\r\n    resultConversion.innerHTML = convertToRoman(valueTyped);\r\n    return;\r\n  }\r\n  showInformation(\"hidden\", false);\r\n  resultConversion.innerHTML = convertToRoman(valueTyped);\r\n};\r\n","import { converterInput, closeButton } from \"./elements\";\nimport { displayCurrentDate } from \"./utils\";\nimport { handleUserTyping, handleCloseButton } from \"./handlers\";\n\nfunction init() {\n  window.addEventListener(\"DOMContentLoaded\", displayCurrentDate());\n  converterInput.addEventListener(\"input\", handleUserTyping);\n  closeButton.addEventListener(\"click\", handleCloseButton);\n}\n\ninit();\n","import \"./app\";\n"]}