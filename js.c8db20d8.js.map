{"version":3,"sources":["../src/js/elements.js","../src/js/numbers.js","../src/js/utils.js","../src/js/handlers.js","../src/js/app.js","../src/js/index.js"],"names":["converterContainer","document","querySelector","converterInput","closeButton","resultConversion","equalSign","currentDateNumeral","currentDateRoman","romanNumbers","decimalNumbers","convertDateToRoman","currentDate","delimiter","stringDate","i","length","j","concat","result","substring","convertToString","date","String","padBeginning","padStart","convertToRoman","input","displayCurrentDate","Date","currentDay","getDate","currentMonth","getMonth","currentYear","getFullYear","dateToDisplay","textContent","setAttribute","value","handleCloseButton","handleUserTyping","e","target","test","currentTarget","startsWith","replace","innerHTML","init","window","addEventListener"],"mappings":"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","file":"js.c8db20d8.js","sourceRoot":"..\\public","sourcesContent":["export const converterContainer = document.querySelector(\".converter__data\");\r\nexport const converterInput = converterContainer.querySelector(\".converter__input\");\r\nexport const closeButton = converterContainer.querySelector(\".close-btn\");\r\nexport const resultConversion = converterContainer.querySelector(\".converter__result\");\r\nexport const equalSign = converterContainer.querySelector(\".equal-sign\");\r\nexport const currentDateNumeral = document.querySelector(\".date__numeral-current\");\r\nexport const currentDateRoman = document.querySelector(\".date__roman\");\r\n","export const romanNumbers = [\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"];\r\nexport const decimalNumbers = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\r\n","import { romanNumbers, decimalNumbers } from \"./numbers\";\r\nimport { currentDateNumeral, currentDateRoman, converterInput, resultConversion } from \"./elements\";\r\n\r\nexport const convertDateToRoman = (currentDate, delimiter) => {\r\n  let stringDate = \"\";\r\n\r\n  for (let i = 0; i < currentDate.length; i++) {\r\n    for (let j = 0; j < decimalNumbers.length; j++) {\r\n      while (decimalNumbers[j] <= currentDate[i]) {\r\n        stringDate += romanNumbers[j];\r\n        currentDate[i] -= decimalNumbers[j];\r\n      }\r\n    }\r\n    stringDate = stringDate.concat(delimiter);\r\n  }\r\n  const result = stringDate.substring(0, stringDate.length - 1);\r\n  return result;\r\n};\r\n\r\nexport const convertToString = (date) => {\r\n  return String(date);\r\n};\r\n\r\nexport const padBeginning = (date) => {\r\n  const stringDate = convertToString(date);\r\n  if (stringDate < 10) {\r\n    return stringDate.padStart(2, 0);\r\n  }\r\n  return stringDate;\r\n};\r\n\r\nexport const convertToRoman = (input) => {\r\n  let stringDate = \"\";\r\n\r\n  for (let i = 0; i < decimalNumbers.length; i++) {\r\n    while (decimalNumbers[i] <= input) {\r\n      stringDate += romanNumbers[i];\r\n      input -= decimalNumbers[i];\r\n    }\r\n  }\r\n  return stringDate;\r\n};\r\n\r\nexport const displayCurrentDate = () => {\r\n  const date = new Date();\r\n  const currentDay = padBeginning(date.getDate());\r\n  const currentMonth = padBeginning(date.getMonth() + 1);\r\n  const currentYear = convertToString(date.getFullYear());\r\n  const dateToDisplay = `${currentDay}.${currentMonth}.${currentYear}`;\r\n  currentDateNumeral.textContent = dateToDisplay;\r\n  currentDateNumeral.setAttribute(\"datetime\", `${currentYear}-${currentMonth}-${currentDay}`);\r\n  currentDateRoman.textContent = convertDateToRoman([currentDay, currentMonth, currentYear], \".\");\r\n  converterInput.value = currentDay;\r\n  resultConversion.textContent = convertToRoman(currentDay);\r\n};\r\n","import { converterInput, resultConversion, equalSign, closeButton } from \"./elements\";\r\nimport { convertToRoman } from \"./utils\";\r\n\r\nexport const handleCloseButton = () => {\r\n  converterInput.value = \"\";\r\n  closeButton.setAttribute(\"hidden\", true);\r\n  equalSign.setAttribute(\"hidden\", true);\r\n  resultConversion.textContent = \"\";\r\n};\r\n\r\nexport const handleUserTyping = (e) => {\r\n  const { value } = e.target;\r\n\r\n  if (value === \"\") {\r\n    equalSign.setAttribute(\"hidden\", true);\r\n    resultConversion.setAttribute(\"hidden\", true);\r\n    closeButton.setAttribute(\"hidden\", true);\r\n    return;\r\n  } else if (/[^0-9]/g.test(value) || e.currentTarget.value.startsWith(\"0\")) {\r\n    value = value.replace(/[^0-9]/g, \"\");\r\n    resultConversion.innerHTML = convertToRoman(value);\r\n    return;\r\n  }\r\n  closeButton.setAttribute(\"hidden\", false);\r\n  equalSign.setAttribute(\"hidden\", false);\r\n  resultConversion.setAttribute(\"hidden\", false);\r\n  resultConversion.innerHTML = convertToRoman(value);\r\n};\r\n","import { converterInput, closeButton } from \"./elements\";\nimport { displayCurrentDate } from \"./utils\";\nimport { handleUserTyping, handleCloseButton } from \"./handlers\";\n\nfunction init() {\n  window.addEventListener(\"DOMContentLoaded\", displayCurrentDate());\n  converterInput.addEventListener(\"input\", handleUserTyping);\n  closeButton.addEventListener(\"click\", handleCloseButton);\n}\n\ninit();\n","import \"./app\";\n"]}